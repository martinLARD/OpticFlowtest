name: Opticflow
display_name: opticflow
# use 'hidden' to remove plugin from napari hub search results
visibility: public
# see https://napari.org/stable/plugins/manifest.html for valid categories
categories: ["Annotation", "Segmentation", "Acquisition"]
contributions:
  commands:
    - id: Opticflow.get_reader
      python_name: opticflow._reader:napari_get_reader
      title: Open data with opticflow
    - id: Opticflow.write_multiple
      python_name: opticflow._writer:write_multiple
      title: Save multi-layer data with opticflow
    - id: Opticflow.write_single_image
      python_name: opticflow._writer:write_single_image
      title: Save image data with opticflow
    - id: Opticflow.make_container_widget
      python_name: opticflow:ImageThreshold
      title: Make threshold Container widget
    - id: Opticflow.make_magic_widget
      python_name: opticflow:threshold_magic_widget
      title: Make threshold magic widget
    - id: Opticflow.make_function_widget
      python_name: opticflow:threshold_autogenerate_widget
      title: Make threshold function widget
    - id: Opticflow.make_qwidget
      python_name: opticflow:ExampleQWidget
      title: Make example QWidget
  readers:
    - command: Opticflow.get_reader
      accepts_directories: false
      filename_patterns: ['*.npy']
  writers:
    - command: Opticflow.write_multiple
      layer_types: ['image*','labels*']
      filename_extensions: []
    - command: Opticflow.write_single_image
      layer_types: ['image']
      filename_extensions: ['.npy']
  widgets:
    - command: Opticflow.make_container_widget
      display_name: Container Threshold
    - command: Opticflow.make_magic_widget
      display_name: Magic Threshold
    - command: Opticflow.make_function_widget
      autogenerate: true
      display_name: Autogenerate Threshold
    - command: Opticflow.make_qwidget
      display_name: Example QWidget
